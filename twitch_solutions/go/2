package main

import "fmt"

func min(a, b int) int {
	if a > b {
		return b
	}
	return a
}

func convert(num string) []int {
	res := make([]int, 0)
	sum := 0
	for i := len(num) - 1; i > -1; i-- {
		if sum < 1000_000_00 {
			sum += int(num[i] - '0')
			sum *= 10
		} else {
			res = append(res, sum/10)
			sum = 0
		}
	}
	return res
}

func convertBack(num []int) string {
	res := ""
	for i := len(num) - 1; i > -1; i-- {
		res += fmt.Sprintf("%08d", num[i])
	}
	i := 0
	for res[i] == '0' {
		i++
	}
	return res[i:]
}

func sum(num1, num2 []int) []int {
	var mem int
	res := make([]int, 0)
	for i := 0; i < min(len(num1), len(num2)); i++ {
		res = append(res, (mem + num1[i] + num2[i]) % 1000_000_00)
	}
}

func mult(num1, num2 []int) []int {
}

func multiply(num1, num2 string) string {
	num1a, num2a := convert(num1), convert(num2)
	return convertBack(mult(num1a, num2a))
}

func main() {
}
